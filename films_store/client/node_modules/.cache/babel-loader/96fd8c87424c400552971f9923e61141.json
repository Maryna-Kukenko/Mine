{"ast":null,"code":"import _classCallCheck from \"D:\\\\GitHubRepo\\\\Mine\\\\films_store\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GitHubRepo\\\\Mine\\\\films_store\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GitHubRepo\\\\Mine\\\\films_store\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GitHubRepo\\\\Mine\\\\films_store\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GitHubRepo\\\\Mine\\\\films_store\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\GitHubRepo\\\\Mine\\\\films_store\\\\client\\\\src\\\\MainPage\\\\index.js\";\nimport React, { Component } from 'react';\nimport './style.scss';\nimport SideBar from '../containers/SideBar/inedex';\nimport Content from '../containers/Content';\n\nvar MainPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainPage, _Component);\n\n  function MainPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MainPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MainPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      filmsList: []\n    };\n\n    _this.addFilmToStore = function (e) {\n      var files = e.target.files;\n      var reader = new FileReader();\n      reader.readAsText(files[0]);\n\n      reader.onload = function (e) {\n        var data = JSON.parse(e.target.result);\n        var title = data.title;\n        var release_year = data.release_year;\n        var stars = data.stars;\n        var format = data.format;\n        var formData = {\n          title: title,\n          release_year: release_year,\n          stars: stars,\n          format: format\n        };\n        return fetch('/api/items', {\n          method: 'POST',\n          body: JSON.stringify(formData),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(function (res) {\n          return console.log(res.json());\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      };\n    };\n\n    _this.callAPI = function () {\n      fetch('/api/items').then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        return _this.setState({\n          filmsList: res\n        });\n      }).catch(function (err) {\n        return err;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MainPage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.callAPI();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"main-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(SideBar, {\n        addFile: this.addFilmToStore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Content, {\n        value: this.state.filmsList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MainPage;\n}(Component);\n\nexport default MainPage;","map":{"version":3,"sources":["D:\\GitHubRepo\\Mine\\films_store\\client\\src\\MainPage\\index.js"],"names":["React","Component","SideBar","Content","MainPage","state","filmsList","addFilmToStore","e","files","target","reader","FileReader","readAsText","onload","data","JSON","parse","result","title","release_year","stars","format","formData","fetch","method","body","stringify","headers","then","res","console","log","json","catch","err","callAPI","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,cAAP;AAEA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE;AADL,K;;UAIRC,c,GAAiB,UAACC,CAAD,EAAO;AACtB,UAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AAEA,UAAIE,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,MAAAA,MAAM,CAACE,UAAP,CAAkBJ,KAAK,CAAC,CAAD,CAAvB;;AAEAE,MAAAA,MAAM,CAACG,MAAP,GAAgB,UAACN,CAAD,EAAM;AACpB,YAAMO,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWT,CAAC,CAACE,MAAF,CAASQ,MAApB,CAAb;AAEA,YAAMC,KAAK,GAAGJ,IAAI,CAACI,KAAnB;AACA,YAAMC,YAAY,GAAGL,IAAI,CAACK,YAA1B;AACA,YAAMC,KAAK,GAAGN,IAAI,CAACM,KAAnB;AACA,YAAMC,MAAM,GAAGP,IAAI,CAACO,MAApB;AAEA,YAAMC,QAAQ,GAAG;AACfJ,UAAAA,KAAK,EAAEA,KADQ;AAEfC,UAAAA,YAAY,EAAEA,YAFC;AAGfC,UAAAA,KAAK,EAAEA,KAHQ;AAIfC,UAAAA,MAAM,EAAEA;AAJO,SAAjB;AAOA,eAAOE,KAAK,CAAC,YAAD,EAAe;AACzBC,UAAAA,MAAM,EAAE,MADiB;AAEzBC,UAAAA,IAAI,EAAEV,IAAI,CAACW,SAAL,CAAeJ,QAAf,CAFmB;AAGzBK,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAHgB,SAAf,CAAL,CAOJC,IAPI,CAOC,UAAAC,GAAG;AAAA,iBAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,EAAZ,CAAJ;AAAA,SAPJ,EAQJC,KARI,CAQE,UAAAC,GAAG;AAAA,iBAAEJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAAF;AAAA,SARL,CAAP;AASD,OAxBD;AAyBD,K;;UAEDC,O,GAAU,YAAM;AACdZ,MAAAA,KAAK,CAAC,YAAD,CAAL,CACGK,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACG,IAAJ,EAAJ;AAAA,OADX,EAEGJ,IAFH,CAGI,UAAAC,GAAG;AAAA,eAAI,MAAKO,QAAL,CAAc;AACnB/B,UAAAA,SAAS,EAAEwB;AADQ,SAAd,CAAJ;AAAA,OAHP,EAMGI,KANH,CAMS,UAAAC,GAAG;AAAA,eAAIA,GAAJ;AAAA,OANZ;AAOD,K;;;;;;;yCAEoB;AACnB,WAAKC,OAAL;AACD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AACA,QAAA,OAAO,EAAI,KAAK7B,cADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE,oBAAC,OAAD;AACA,QAAA,KAAK,EAAI,KAAKF,KAAL,CAAWC,SADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAUD;;;;EA/DoBL,S;;AAkEvB,eAAeG,QAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport './style.scss'\r\n\r\nimport SideBar from '../containers/SideBar/inedex'\r\nimport Content from '../containers/Content'\r\n\r\nclass MainPage extends Component {\r\n  state = {\r\n    filmsList: []\r\n  }\r\n\r\n  addFilmToStore = (e) => {\r\n    let files = e.target.files;\r\n\r\n    let reader = new FileReader();\r\n    reader.readAsText(files[0]);\r\n\r\n    reader.onload = (e) =>{\r\n      const data = JSON.parse(e.target.result);\r\n\r\n      const title = data.title;\r\n      const release_year = data.release_year;\r\n      const stars = data.stars;\r\n      const format = data.format;\r\n\r\n      const formData = {\r\n        title: title,\r\n        release_year: release_year,\r\n        stars: stars,\r\n        format: format\r\n      };\r\n\r\n      return fetch('/api/items', {\r\n        method: 'POST',\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n        .then(res => console.log(res.json()))\r\n        .catch(err=>console.log(err))\r\n    }\r\n  }\r\n\r\n  callAPI = () => {\r\n    fetch('/api/items')\r\n      .then(res => res.json())\r\n      .then(\r\n        res => this.setState({\r\n          filmsList: res\r\n        }))\r\n      .catch(err => err)\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.callAPI()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='main-page'>\r\n        <SideBar\r\n        addFile = {this.addFilmToStore}\r\n        />\r\n        <Content\r\n        value = {this.state.filmsList}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainPage"]},"metadata":{},"sourceType":"module"}